@model GrupoCometa.Models.FacturaHeader

@{
    ViewBag.Title = "Insert";
}

<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header">Crear Nueva Factura</h2>
    </div>
</div>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">Información General de Facturación</div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-lg-6">

                            <div class="row form-group">
                                @Html.LabelFor(model => model.idFacturaHeader, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.idFacturaHeader, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.idFacturaHeader, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row form-group">
                                @Html.LabelFor(model => model.dtFechaPago, htmlAttributes: new { @class = "control-label col-md-4 datepicker" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.dtFechaPago, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.dtFechaPago, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="col-lg-6">

                            <div class="row form-group">
                                @Html.LabelFor(model => model.idTipoPago, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.idTipoPago, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.idTipoPago, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">Información del Cliente</div>
                <div class="panel-body">


                    <div class="row form-group">
                        @Html.LabelFor(model => model.idCliente, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.idCliente, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.idCliente, "", new { @class = "text-danger" })
                        </div>
                    </div>

                        <div class="well">
                            <div class="row">
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.clienteActual.idCliente, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DisplayFor(model => model.clienteActual.idCliente)         
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.clienteActual.cEmpresa, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DisplayFor(model => model.clienteActual.cEmpresa)
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.clienteActual.cRepresentante, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DisplayFor(model => model.clienteActual.cRepresentante)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.clienteActual.cRNC, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.DisplayFor(model => model.clienteActual.cRNC)
                                    </div>
                                </div>
                            </div>
 
                        </div>

                    <div class="bs-callout bs-callout-info" id="callout-glyphicons-location"></div>

                        <div class="row form-group">
                            @Html.LabelFor(model => model.idEmpleado, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.idEmpleado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.idEmpleado, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">Nuevo Elemento de Facturación</div>
                <div class="panel-body">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="row form-group">
                                @Html.LabelFor(model => model.facturaDetalleActual.idProducto, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.facturaDetalleActual.idProducto, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.facturaDetalleActual.idProducto, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="row form-group">
                                @Html.LabelFor(model => model.facturaDetalleActual.nCantidad, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.facturaDetalleActual.nCantidad, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.facturaDetalleActual.nCantidad, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    @Html.HiddenFor(model => model.idFacturaHeader, new { id = "tbxIdFacturaHeader" })
                    
                    <input id="tbxIdFacturaDetalle" name="facturaDetalleActual.idFacturaDetalle" type="hidden" value="0">

                    <p>@Html.ActionLink("Agregar Producto", "Insert", null, new { @class = "btn btn-outline btn-default", @type = "button" })</p>
             
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">Listado de Productos</div>
                <div class="panel-body">
                    
                    <table class="table" id="tablaFactura">
                        <thead>
                            <tr>
                                <th class="hidden">@Html.DisplayNameFor(model => model.listaDetalle.First().idFacturaDetalle)</th>
                                <th class="hidden">@Html.DisplayNameFor(model => model.listaDetalle.First().idFacturaHeader)</th>
                                <th>@Html.DisplayNameFor(model => model.listaDetalle.First().idProducto)</th>
                                <th>@Html.DisplayNameFor(model => model.listaDetalle.First().cNombre)</th>
                                <th>@Html.DisplayNameFor(model => model.listaDetalle.First().nCantidad)</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            
                            @for (int i = 0; i < Model.listaDetalle.Count; ++i)
                            {
                                <tr id="col@(i)">
                                    <td class="hidden">@Html.DisplayFor(model => Model.listaDetalle[i].idFacturaDetalle)</td>
                                    <td class="hidden">@Html.DisplayFor(model => Model.listaDetalle[i].idFacturaHeader)</td>
                                    <td>@Html.DisplayFor(modelItem => Model.listaDetalle[i].idProducto)</td>
                                    <td>@Html.DisplayFor(modelItem => Model.listaDetalle[i].cNombre)</td>
                                    <td>@Html.DisplayFor(modelItem => Model.listaDetalle[i].nCantidad)</td>
                                    <td><a href='javascript:removeItem("@(i)");'><i class='fa fa-times'></i></a></td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <!--Lleva el conteo de los elementos de la tabla-->
                    <input type="hidden" value="@(Model.listaDetalle.Count)" id="contListaFactura" />


                    <div id="valuesTablaFactura">

                        @for (int i = 0; i < Model.listaDetalle.Count; ++i)
                {
                            <div id='h@(i)'>
                                <input type='hidden' name='listaDetalle.Index' value='@(i)'>
                                <input type='hidden' name='listaDetalle[@(i)].idFacturaDetalle' value='@Model.listaDetalle[i].idFacturaDetalle'>
                                <input type='hidden' name='listaDetalle[@(i)].idFacturaHeader' value='@Model.listaDetalle[i].idFacturaHeader'>
                                <input type='hidden' name='listaDetalle[@(i)].idProducto' value='@Model.listaDetalle[i].idProducto'>
                                <input type='hidden' name='listaDetalle[@(i)].cNombre' value='@Model.listaDetalle[i].cNombre'>
                                <input type='hidden' name='listaDetalle[@(i)].nCantidad' value='@Model.listaDetalle[i].nCantidad'>
                            </div>
                        }
                    </div>


                    <div class="row form-group">
                        @Html.LabelFor(model => model.mTotal, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.mTotal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.mTotal, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="btn-toolbar">
                    <input type="submit" value="Crear Factura" class="btn btn-default" />
                    <button class="btn-default btn btnCancelar" type="button" onclick="window.location.href = '@Url.Action("Index", "Facturacion")';">Cancelar</button>
                </div>
            </div>
        </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $('.datepicker').datepicker({
                format: 'mm/dd/yyyy'
            });
        });

        function agregarProducto() {
            if ($("form").valid() == true) {    //TODO: validar el area del nuevo producto solamente
                //Adding the datatable row

                //tbxIdFacturaHeader
                //tbxIdFacturaDetalle

                var a = $("#tablaAsignaturas").dataTable().fnAddData([
                    $("#tbxUnivOrigen").val(),
                    $("#tbxIdCurso").val(),
                    $("#tbxIdPeriodo").val(),
                    $("#tbxIdAsigOrigen").val(),
                    $("#tbxDescAsigOrigen").val(),
                    $("#dpxCalifAsignOrigen").val(),
                    $("#tbxCreditosOrigen").val(),
                    $("#dpxIdAsigSeminario").val(),
                    $("#dpxIdAsigSeminario option:selected").text(),
                    $("#txtCreditosSeminario").text(),
                    "<a href='javascript:removeItem(" + '"' + cont + '")' + ";'><i class='fa fa-times'></i></a>"
                ]);
            }
        }
    </script>
}
